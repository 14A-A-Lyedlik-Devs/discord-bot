# Ez a sor a pylint errorok elker√ºl√©s√©re szolg√°l
# pylint: disable=E0237, W0621, W0601, W0611, W1401, C2401, C0301, C0114

# modulok import√°l√°sa
import asyncio
import os
from typing import Optional, List, Literal
import discord
from discord import app_commands
from discord.ext import commands
from discord import ui

# from dotenv import load_dotenv
# load_dotenv()


MY_GUILD = discord.Object(id=1015997406443229204)
TOKEN = os.getenv("DISCORD_TOKEN")


class Button1(ui.Modal, title="N√©v megad√°sa"):
    name = ui.TextInput(
        label="N√©v",
        required=True,
        placeholder="Bart√≥k B√©la",
        style=discord.TextStyle.paragraph,
        custom_id="namemodal",
    )
    grade = ui.TextInput(label="Oszt√°ly", placeholder="9A", required=False)

    async def on_submit(self, inter: discord.Interaction):
        await inter.user.edit(nick=self.name.value)
        if len(self.grade.value) < 2:
            await inter.response.send_message(
                "N√©v megadva oszt√°ly n√©lk√ºl!", ephemeral=True
            )
        else:
            role = discord.utils.get(LYEDLIK.roles, name=self.grade.value)
            if role in LYEDLIK.roles:
                await inter.user.add_roles(role)
            else:
                role = await LYEDLIK.create_role(name=self.grade.value)
                await role.edit(position=DEV_ROLE.position + 1)  # clunky
                await inter.user.add_roles(role)
            await inter.response.send_message(
                "Sikeres n√©v megad√°s oszt√°llyal!", ephemeral=True
            )


class Button1View(ui.View):
    super().__init__(timeout=None)

    @discord.ui.button(
        label="üòé N√©v megad√°sa",
        style=discord.ButtonStyle.primary,
        custom_id="button1",
    )
    async def button_callback(
        self, inter: discord.Interaction, button: discord.ui.Button
    ):
        await inter.response.send_modal(Button1())


class Dropdown(ui.Select):
    def __init__(self):
        options = [
            discord.SelectOption(
                label="Jedlik", description="M√≥dos G√°bor a kir√°lyunk", emoji="üîµ"
            ),
            discord.SelectOption(label="D√ñK", description="D√ñK-√∂s vagyok", emoji="üü°"),
            discord.SelectOption(
                label="Veter√°n", description="Voltam jedlikes", emoji="üü¢"
            ),
            discord.SelectOption(
                label="K√ºls≈ës",
                description="Nem vagyok jedlikes √©s nem is voltam",
                emoji="üü©",
            ),
            discord.SelectOption(label="DEV", description="(‚óè'‚ó°'‚óè)", emoji="üî¥"),
        ]
        super().__init__(
            placeholder="V√°laszd ki azokat, amelyek r√°d illenek *t√∂bbes sz√°m*",
            min_values=1,
            max_values=len(options),
            options=options,
            custom_id="dropdown",
        )

    async def callback(self, inter: discord.Interaction):
        if "Jedlik" in self.values:
            await inter.user.add_roles(JEDLIK_ROLE)
        if "Veter√°n" in self.values:
            await inter.user.add_roles(VETER√ÅN_ROLE)
            await inter.user.remove_roles(JEDLIK_ROLE)
        if "K√ºls≈ës" in self.values:
            await inter.user.add_roles(K√úLS≈êS_ROLE)
        if "D√ñK" in self.values:
            await inter.user.add_roles(D√ñK_ROLE)
        if "DEV" in self.values:
            await inter.user.add_roles(DEV_ROLE)
        await inter.response.send_message(
            f"A v√°laszt√°said r√∂gz√≠tve: {self.values}", ephemeral=True
        )


class DropdownView(ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(Dropdown())


class Button2View(ui.View):
    super().__init__(timeout=None)

    @discord.ui.button(
        label="üü£ OT k√©relem", style=discord.ButtonStyle.secondary, custom_id="button2"
    )
    async def button_callback(
        self, inter: discord.Interaction, button: discord.ui.Button
    ):
        e = discord.Embed(
            title="OT k√©relem",
            description="",
            color=discord.Color.purple(),
        )
        global user_to_ot
        user_to_ot = inter.user
        e.set_author(name=user_to_ot.name, icon_url=user_to_ot.avatar.url)
        await LOG_CHANNEL.send(
            embed=e,
            view=Button3View(),
        )
        await inter.response.send_message("K√©relem elk√ºldve!", ephemeral=True)


class Button3View(ui.View):
    super().__init__(timeout=None)

    @discord.ui.button(
        label="üëç Elfogad√°s", style=discord.ButtonStyle.success, custom_id="buttonaccept"
    )
    async def button_callback(
        self, inter: discord.Interaction, button: discord.ui.Button
    ):
        if OT_ROLE in inter.user.roles or inter.user == OWNER:
            await user_to_ot.add_roles(OT_ROLE)
            await inter.response.send_message(
                f"{user_to_ot.mention} OT k√©relm√©t {inter.user.mention} elfogadta",
                ephemeral=False,
            )
            self.stop()

    @discord.ui.button(
        label="üëé Elvet√©s", style=discord.ButtonStyle.danger, custom_id="buttonreject"
    )
    async def button_callback_decline(
        self, inter: discord.Interaction, button: discord.ui.Button
    ):
        if OT_ROLE in inter.user.roles or inter.user == OWNER:
            await inter.response.send_message(
                f"{user_to_ot.mention} OT k√©relm√©t {inter.user.mention} elutas√≠totta",
                ephemeral=False,
            )
            self.stop()


class Bot(commands.Bot):
    """Bot regisztr√°l√°sa"""

    def __init__(self, *, command_prefix: str, intents: discord.Intents):
        super().__init__(command_prefix, intents=intents)

    # slash command-ok felv√©tele
    async def setup_hook(self):
        self.tree.copy_global_to(guild=MY_GUILD)
        await self.tree.sync(guild=MY_GUILD)
        await self.add_view(Button1View())
        await self.add_view(DropdownView())
        await self.add_view(Button2View())


# Discord Intent-ek be√°ll√≠t√°sa, ezekkel adunk a botnak jogosults√°gokat
intents = discord.Intents.default()
intents.presences = True
intents.members = True
intents.message_content = True
# bot l√©trehoz√°sa
bot = Bot(command_prefix="-", intents=intents)


@bot.event
async def on_ready():
    """A Bot on_ready esem√©nye a bot bekapcsol√°sa ut√°n fut le, ekkor adjuk meg a glob√°lis v√°ltoz√≥kat"""
    global LYEDLIK, OT_ROLE, DEV_ROLE, TAG_ROLE, D√ñK_ROLE, JEDLIK_ROLE, VETER√ÅN_ROLE, K√úLS≈êS_ROLE, PORTA_CHANNEL, LOG_CHANNEL, OWNER
    LYEDLIK = bot.get_guild(1015997406443229204)

    OT_ROLE = LYEDLIK.get_role(1018451182131355728)
    DEV_ROLE = LYEDLIK.get_role(1018451781774225470)
    TAG_ROLE = LYEDLIK.get_role(1019936616262942771)
    D√ñK_ROLE = LYEDLIK.get_role(1015998890102763602)
    JEDLIK_ROLE = LYEDLIK.get_role(1019649131712618558)
    VETER√ÅN_ROLE = LYEDLIK.get_role(1019649352374947890)
    K√úLS≈êS_ROLE = LYEDLIK.get_role(1019649458461495356)

    PORTA_CHANNEL = LYEDLIK.get_channel(1015997407265304688)
    LOG_CHANNEL = LYEDLIK.get_channel(1019666689610227834)

    OWNER = bot.get_user(361534796830081024)

    await bot.change_presence(
        status=discord.Status.online,
        activity=discord.Streaming(
            name="Matekh√°zi √≠r√°s", url="https://www.twitch.tv/discord"
        ),
    )
    print(f"Logged in as {bot.user} in {LYEDLIK.name}")
    print("------")


@bot.event
async def on_member_join(member):
    """on_member_join esem√©ny: amikor egy √∫j tag csatlakozik a szerverhez, kap egy Role-t"""
    await member.add_roles(TAG_ROLE)


mod_group = app_commands.Group(name="mod", description="Mod group")


@app_commands.default_permissions(manage_messages=True)
class ModGroup(app_commands.Group):
    bot.tree.add_command(mod_group)


dev_group = app_commands.Group(name="dev", description="Dev group")


@app_commands.default_permissions(view_audit_log=True)
class DevGroup(app_commands.Group):
    bot.tree.add_command(dev_group)


@bot.command()
@commands.has_permissions(administrator=True)
async def setup(ctx):
    """Regisztr√°ci√≥hoz sz√ºks√©ges embed"""
    await ctx.message.delete()
    embed1 = discord.Embed(
        title="√údv a Jedlik szerveren!",
        description=":white_small_square: **Ahhoz, hogy hozz√°f√©rj a szerver t√∂bbi r√©sz√©hez is, a k√∂vetkez≈ë \nl√©p√©seken kell v√©gigmenj:**\n\n:one: - Teljes n√©v √©s oszt√°ly megad√°sa\n:two: - Szerver szerepk√∂r√∂k kiv√°laszt√°sa",
        color=0x2F3136,
    )
    await PORTA_CHANNEL.send(
        file=discord.File("./img/jedlik_banner.png", filename="jedlik_banner.png"),
        embed=embed1,
    )

    embed6 = discord.Embed(
        title=":purple_square: - OT vagyok",
        description=":white_small_square: Csak OT-nak: katt a gombra!",
        color=discord.Color.purple(),
    )
    view5 = Button2View()
    await PORTA_CHANNEL.send(embed=embed6, view=view5)

    embed2 = discord.Embed(
        title=":one: - Teljes n√©v √©s oszt√°ly megad√°sa",
        description=":white_small_square: Ez az √ºzenet alatt l√©v≈ë gombra kattint√°s ut√°n a felugr√≥ ablakban adhatod meg a neved.\n__Az oszt√°lyt csak a jedlikeseknek kell be√≠rni.__",
        color=0xED033D,
    )
    view1 = Button1View()
    await PORTA_CHANNEL.send(embed=embed2, view=view1)

    # embed3 = discord.Embed(
    #     title=":two: - G√≥lyat√°bor felm√©r√©s: Melyik √©vben volt√°l GT-n?",
    #     description=":white_small_square: Ez az √ºzenet alatti leny√≠l√≥ men√ºb≈ël v√°laszd ki, hogy melyik √©vben megrendezett GT-n volt√°l **szervez≈ë**!, __sz√≥val a saj√°t g√≥lyat√°borod nem sz√°m√≠t__.",
    #     color=0x0596f7,
    # )
    # view2 = DropdownView()
    # await PORTA_CHANNEL.send(embed=embed3, view=view2)

    # embed4 = discord.Embed(
    #     title=":three: - G√≥lyat√°bor felm√©r√©s: Mit szervezt√©l m√°r GT-ben?",
    #     description=":white_small_square: Ez az √ºzenet alatt a leny√≠l√≥ men√ºb≈ël v√°laszd ki, hogy milyen posztokon volt√°l m√°r GT-ben!",
    #     color=0x4c6ec0,
    # )
    # view3 = DropdownView()
    # await PORTA_CHANNEL.send(embed=embed4, view=view3)

    embed5 = discord.Embed(
        title=":two: - Szerepk√∂r√∂k kiv√°laszt√°sa",
        description=f":white_small_square: Ez az √ºzenet alatt l√©v≈ë men√ºben v√°laszthatod ki a hozz√°d tartoz√≥ Role-okat.\n{JEDLIK_ROLE.mention}: Jelenleg jedlikes tanul√≥k\n{D√ñK_ROLE.mention}: D√ñK-√∂s szob√°khoz hozz√°f√©r√©s\n{VETER√ÅN_ROLE.mention}: Volt jedlikes tanul√≥k **(A Jedlikes role-t megkapod automatikusan emell√©)**\n{K√úLS≈êS_ROLE.mention}: Nem jedlikes tanul√≥k\n{DEV_ROLE.mention}: Ha √©rdekel a Python √©s a Discord botok programoz√°sa, akkor itt csatlakozhatsz a Lyedlik Devs-hez!",
        color=0x0596F7,
    )
    view4 = DropdownView()
    await PORTA_CHANNEL.send(embed=embed5, view=view4)


@bot.tree.command()
async def hello(inter: discord.Interaction):
    """Cs√°"""
    await inter.response.send_message(
        f"Szeva, {inter.user.mention}",
        allowed_mentions=discord.AllowedMentions(users=False),
    )


@bot.tree.command()
@app_commands.describe(member="A tag, akinek a csatlakoz√°si d√°tum√°t szeretn√©d megn√©zni")
async def joined(inter: discord.Interaction, member: Optional[discord.Member] = None):
    """Megadja, hogy mikor csatlakozott a tag a szerverhez"""
    member = member or inter.user
    await inter.response.send_message(
        f"> {member} csatlakoz√°si ideje: {discord.utils.format_dt(member.joined_at)}"
    )


@bot.tree.context_menu(name="Csatlakoz√°s ideje")
async def show_join_date(inter: discord.Interaction, member: discord.Member):
    """Megadja, hogy mikor csatlakozott a tag a szerverhez"""
    await inter.response.send_message(
        f"> {member} csatlakoz√°si ideje: {discord.utils.format_dt(member.joined_at)}"
    )


@dev_group.command()
@app_commands.describe(
    color="embed sz√≠ne",
    title="embed c√≠me",
    description="embed le√≠r√°sa",
)
@app_commands.checks.has_permissions(view_audit_log=True)
async def embed(
    inter: discord.Interaction,
    color: Literal["dark_theme", "red", "green", "fuchsia", "yellow"],
    title: Optional[str] = "Embed",
    *,
    description: Optional[str] = None,
):
    """Saj√°t embed k√ºld√©se"""
    colors = {
        "dark_theme": "0x36393F",
        "green": "0x57F287",
        "red": "0xED4245",
        "fuchsia": "0xEB459E",
        "yellow": "0xFEE75C",
    }
    embed = discord.Embed(
        title=title,
        description=description,
        color=discord.Color.from_str(colors[color]),
    )
    await inter.response.send_message(embed=embed)


# @bot.tree.command()
# @app_commands.describe(
#     fruit="Egy gy√ºm√∂lcs"
# )
# async def fruits(interaction: discord.Interaction, fruit: str):
#     await interaction.response.send_message(f'Your favourite fruit seems to be {fruit}')

# @fruits.autocomplete('fruit')
# async def fruits_autocomplete(
#     interaction: discord.Interaction,
#     current: str,
# ) -> List[app_commands.Choice[str]]:
#     fruits = ['Banana', 'Pineapple', 'Apple', 'Watermelon', 'Melon', 'Cherry']
#     return [
#         app_commands.Choice(name=fruit, value=fruit)
#         for fruit in fruits if current.lower() in fruit.lower()
#     ]


@mod_group.command()
@app_commands.describe(
    amount="A t√∂r√∂lni k√≠v√°nt √ºzenetek sz√°ma (alap√©rtelmezett: 1)",
)
@app_commands.checks.has_permissions(manage_messages=True)
async def clear(inter: discord.Interaction, amount: Optional[int] = 1):
    """T√∂r√∂l egy megadott mennyis√©g≈± √ºzenetet"""
    await inter.channel.purge(limit=amount)
    await inter.response.send_message(f"{amount} √ºzenet t√∂r√∂lve.", ephemeral=False)
    await asyncio.sleep(3)
    await inter.delete_original_response()


@bot.tree.context_menu(name="√úzenet Jelent√©se")
async def report_message(inter: discord.Interaction, message: discord.Message):
    """Jelent√©st k√ºld a moder√°toroknak egy √ºzenetr≈ël"""
    await inter.response.send_message(
        f"K√∂cce {message.author.mention}, a jelent√©s r√∂gz√≠tve lett.", ephemeral=True
    )

    embed = discord.Embed(title="Jelentett √ºzenet")
    if message.content:
        embed.description = message.content

    embed.set_author(
        name=message.author.display_name, icon_url=message.author.display_avatar.url
    )
    embed.timestamp = message.created_at

    url_view = discord.ui.View()
    url_view.add_item(
        discord.ui.Button(
            label="Ugr√°s az √ºzenethez",
            style=discord.ButtonStyle.url,
            url=message.jump_url,
        )
    )

    await LOG_CHANNEL.send(embed=embed, view=url_view)


@dev_group.command()
@app_commands.checks.has_permissions(view_audit_log=True)
async def slash_clear(inter: discord.Interaction):
    """T√∂rli az √∂sszes slash commandot, Test botokhoz haszn√°lt, hogy ne szemetelj√©k a slash command-okat a szerveren"""
    await inter.response.send_message(
        "Slash command-ok elt√°vol√≠tva.\nA Bot k√©szen √°ll a le√°ll√≠t√°sra.", ephemeral=True
    )
    bot.tree.clear_commands(guild=MY_GUILD)
    await bot.tree.sync(guild=MY_GUILD)


@bot.command()
@commands.has_permissions(view_audit_log=True)
async def sync(ctx):
    """Visszat√∂lti az √∂sszes slash commandot"""
    await ctx.message.delete()
    msg = await ctx.send("`Slash command-ok visszat√∂lt√©se...`")
    bot.tree.copy_global_to(guild=MY_GUILD)
    await bot.tree.sync(guild=MY_GUILD)
    await msg.edit(content="`K√©sz.`")
    await asyncio.sleep(3)
    await msg.delete()


bot.run(TOKEN)
